// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth Models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String?   @unique
  crypted_password String?
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  sessions         Session[]
  tasks            Task[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
}

// App Models
model Task {
  id             Int       @id @default(autoincrement())
  userId         String?
  taskStatusId   Int
  taskPriorityId Int
  name           String
  body           String?
  expire_at      DateTime?
  tags           Tag[]

  priority TaskPriority @relation(fields: [taskPriorityId], references: [id])
  status   TaskStatus   @relation(fields: [taskStatusId], references: [id])
  user     User?        @relation(fields: [userId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String
  tasks Task[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

// Enum
// https://zenn.dev/convers39/articles/0e58e17d0da43f
model TaskStatus {
  id     Int    @id @default(autoincrement())
  status String
  tasks  Task[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

// Enum
model TaskPriority {
  id       Int    @id @default(autoincrement())
  priority String
  tasks    Task[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
